Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import random

page_id = "nla.obj-3083661207"

# Get the dimensions of the original image from embedded metadata
page_size = get_page_size(page_id)

# Download the page image
img_response = requests.get(f"https://nla.gov.au/{page_id}/image")
redacted_image = Image.open(BytesIO(img_response.content))

# Calculate the size ratio of the two page images
ratio = redacted_image.size[0] / page_size["width"]

# Get the OCR data
ocr_response = requests.get(f"http://nla.gov.au/{page_id}/ocr")
data = ocr_response.json()

# Get all the text blocks
text_blocks = get_blocks(data)

words = []
# Loop through text blacks and then lines saving the words
for block in text_blocks:
    for line in block.get("ls", []):
        words += line.get("ws", [])

# Get the coordinates of all the words
word_coords = get_coords(words)

# Get a random selection of words
target_words = random.sample(word_coords, 20)

# Open the page image for drawing
redacted = ImageDraw.Draw(redacted_image)

for coords in target_words:
    # Draw a black rectangle over the word using the coords
    redacted.rectangle([c for c in coords], "black")

display(redacted_image)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[9], line 32[0m
[1;32m     29[0m word_coords [38;5;241m=[39m get_coords(words)
[1;32m     31[0m [38;5;66;03m# Get a random selection of words[39;00m
[0;32m---> 32[0m target_words [38;5;241m=[39m [43mrandom[49m[38;5;241;43m.[39;49m[43msample[49m[43m([49m[43mword_coords[49m[43m,[49m[43m [49m[38;5;241;43m20[39;49m[43m)[49m
[1;32m     34[0m [38;5;66;03m# Open the page image for drawing[39;00m
[1;32m     35[0m redacted [38;5;241m=[39m ImageDraw[38;5;241m.[39mDraw(redacted_image)

File [0;32m/opt/hostedtoolcache/Python/3.10.14/x64/lib/python3.10/random.py:482[0m, in [0;36mRandom.sample[0;34m(self, population, k, counts)[0m
[1;32m    480[0m randbelow [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_randbelow
[1;32m    481[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;241m0[39m [38;5;241m<[39m[38;5;241m=[39m k [38;5;241m<[39m[38;5;241m=[39m n:
[0;32m--> 482[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mSample larger than population or is negative[39m[38;5;124m"[39m)
[1;32m    483[0m result [38;5;241m=[39m [[38;5;28;01mNone[39;00m] [38;5;241m*[39m k
[1;32m    484[0m setsize [38;5;241m=[39m [38;5;241m21[39m        [38;5;66;03m# size of a small set minus size of an empty list[39;00m

[0;31mValueError[0m: Sample larger than population or is negative

