selector_to_html = {"a[href=\"#accuracy-and-consistency-of-metadata\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id2\" role=\"doc-backlink\"><span class=\"section-number\">9.1. </span>Accuracy and consistency of metadata</a><a class=\"headerlink\" href=\"#accuracy-and-consistency-of-metadata\" title=\"Link to this heading\">#</a></h2><p>Trove\u2019s aggregated metadata can include errors, either because of data entry problems or formatting inconsistencies. Problems with dates can seem more obvious than other types of metadata because we expect them to fall within a specific range \u2013 it\u2019s unlikely Australian libraries will hold books from the year 9000! You can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">decade</span></code> facet to reveal some of these problems.</p><p>Here, for example, is the distribution by decade of works in the \u2018Research &amp; reports\u2019 category. Most publications are dated between 1800 and 2100, as you would expect, but there are more than a hundred in the first century, and even an outlier in the 9000s.</p>", "a[href=\"#date-searches\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">9. </span>Date searches<a class=\"headerlink\" href=\"#date-searches\" title=\"Link to this heading\">#</a></h1><p>You can limit your Trove searches by date in a number of ways. These options vary across categories and can cause confusion. This section will attempt to document the possibilities and problems.</p>", "a[href=\"#research-decades-chart\"]": "<figure class=\"align-default\" id=\"research-decades-chart\" style=\"width: 600px\">\n<div class=\"output text_html\">\n<style>\n  #altair-viz-afeb5a8a096e482aa0875fa85756ee78.vega-embed {\n    width: 100%;\n    display: flex;\n  }\n\n  #altair-viz-afeb5a8a096e482aa0875fa85756ee78.vega-embed details,\n  #altair-viz-afeb5a8a096e482aa0875fa85756ee78.vega-embed details summary {\n    position: relative;\n  }\n</style>\n<div id=\"altair-viz-afeb5a8a096e482aa0875fa85756ee78\"></div>\n<script type=\"text/javascript\">\n  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n  (function(spec, embedOpt){\n    let outputDiv = document.currentScript.previousElementSibling;\n    if (outputDiv.id !== \"altair-viz-afeb5a8a096e482aa0875fa85756ee78\") {\n      outputDiv = document.getElementById(\"altair-viz-afeb5a8a096e482aa0875fa85756ee78\");\n    }\n    const paths = {\n      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.17.0?noext\",\n      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n    };\n\n    function maybeLoadScript(lib, version) {\n      var key = `${lib.replace(\"-\", \"\")}_version`;\n      return (VEGA_DEBUG[key] == version) ?\n        Promise.resolve(paths[lib]) :\n        new Promise(function(resolve, reject) {\n          var s = document.createElement('script');\n          document.getElementsByTagName(\"head\")[0].appendChild(s);\n          s.async = true;\n          s.onload = () => {\n            VEGA_DEBUG[key] = version;\n            return resolve(paths[lib]);\n          };\n          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n          s.src = paths[lib];\n        });\n    }\n\n    function showError(err) {\n      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n      throw err;\n    }\n\n    function displayChart(vegaEmbed) {\n      vegaEmbed(outputDiv, spec, embedOpt)\n        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n    }\n\n    if(typeof define === \"function\" && define.amd) {\n      requirejs.config({paths});\n      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n    } else {\n      maybeLoadScript(\"vega\", \"5\")\n        .then(() => maybeLoadScript(\"vega-lite\", \"5.17.0\"))\n        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n        .catch(showError)\n        .then(() => displayChart(vegaEmbed));\n    }\n  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-ebfcc129242c95f2ea436794cc99fe25\"}, \"mark\": {\"type\": \"bar\"}, \"encoding\": {\"x\": {\"axis\": {\"format\": \"c\"}, \"bin\": {\"step\": 100}, \"field\": \"decade\", \"title\": \"decade (binned by century)\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"total_works\", \"scale\": {\"type\": \"log\"}, \"title\": \"number of works (log scale)\", \"type\": \"quantitative\"}}, \"height\": 250, \"width\": 500, \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.17.0.json\", \"datasets\": {\"data-ebfcc129242c95f2ea436794cc99fe25\": [{\"decade\": 9970, \"total_works\": 2}, {\"decade\": 6660, \"total_works\": 3}, {\"decade\": 5550, \"total_works\": 1}, {\"decade\": 5380, \"total_works\": 4}, {\"decade\": 5130, \"total_works\": 2}, {\"decade\": 5000, \"total_works\": 2}, {\"decade\": 4990, \"total_works\": 1}, {\"decade\": 4390, \"total_works\": 2}, {\"decade\": 3410, \"total_works\": 1}, {\"decade\": 3330, \"total_works\": 3}, {\"decade\": 3070, \"total_works\": 1}, {\"decade\": 3010, \"total_works\": 1}, {\"decade\": 3000, \"total_works\": 1}, {\"decade\": 2990, \"total_works\": 2}, {\"decade\": 2840, \"total_works\": 1}, {\"decade\": 2320, \"total_works\": 1}, {\"decade\": 2310, \"total_works\": 1}, {\"decade\": 2300, \"total_works\": 2}, {\"decade\": 2290, \"total_works\": 4}, {\"decade\": 2200, \"total_works\": 2}, {\"decade\": 2180, \"total_works\": 4}, {\"decade\": 2160, \"total_works\": 1}, {\"decade\": 2120, \"total_works\": 1}, {\"decade\": 2110, \"total_works\": 1}, {\"decade\": 2100, \"total_works\": 64}, {\"decade\": 2090, \"total_works\": 36}, {\"decade\": 2080, \"total_works\": 761}, {\"decade\": 2070, \"total_works\": 3}, {\"decade\": 2060, \"total_works\": 1}, {\"decade\": 2050, \"total_works\": 7}, {\"decade\": 2040, \"total_works\": 7}, {\"decade\": 2030, \"total_works\": 14}, {\"decade\": 2020, \"total_works\": 826175}, {\"decade\": 2010, \"total_works\": 1836332}, {\"decade\": 2000, \"total_works\": 1450110}, {\"decade\": 1990, \"total_works\": 808350}, {\"decade\": 1980, \"total_works\": 637079}, {\"decade\": 1970, \"total_works\": 452007}, {\"decade\": 1960, \"total_works\": 275214}, {\"decade\": 1950, \"total_works\": 198880}, {\"decade\": 1940, \"total_works\": 168549}, {\"decade\": 1930, \"total_works\": 129424}, {\"decade\": 1920, \"total_works\": 120155}, {\"decade\": 1910, \"total_works\": 110469}, {\"decade\": 1900, \"total_works\": 126347}, {\"decade\": 1890, \"total_works\": 31824}, {\"decade\": 1880, \"total_works\": 29894}, {\"decade\": 1870, \"total_works\": 24012}, {\"decade\": 1860, \"total_works\": 23793}, {\"decade\": 1850, \"total_works\": 22764}, {\"decade\": 1840, \"total_works\": 15920}, {\"decade\": 1830, \"total_works\": 14963}, {\"decade\": 1820, \"total_works\": 10758}, {\"decade\": 1810, \"total_works\": 14387}, {\"decade\": 1800, \"total_works\": 9712}, {\"decade\": 1790, \"total_works\": 9190}, {\"decade\": 1780, \"total_works\": 3869}, {\"decade\": 1770, \"total_works\": 3208}, {\"decade\": 1760, \"total_works\": 2232}, {\"decade\": 1750, \"total_works\": 2134}, {\"decade\": 1740, \"total_works\": 1685}, {\"decade\": 1730, \"total_works\": 1418}, {\"decade\": 1720, \"total_works\": 1700}, {\"decade\": 1710, \"total_works\": 1628}, {\"decade\": 1700, \"total_works\": 1795}, {\"decade\": 1690, \"total_works\": 1062}, {\"decade\": 1680, \"total_works\": 1161}, {\"decade\": 1670, \"total_works\": 737}, {\"decade\": 1660, \"total_works\": 874}, {\"decade\": 1650, \"total_works\": 1047}, {\"decade\": 1640, \"total_works\": 2616}, {\"decade\": 1630, \"total_works\": 399}, {\"decade\": 1620, \"total_works\": 460}, {\"decade\": 1610, \"total_works\": 400}, {\"decade\": 1600, \"total_works\": 392}, {\"decade\": 1590, \"total_works\": 218}, {\"decade\": 1580, \"total_works\": 422}, {\"decade\": 1570, \"total_works\": 257}, {\"decade\": 1560, \"total_works\": 262}, {\"decade\": 1550, \"total_works\": 187}, {\"decade\": 1540, \"total_works\": 174}, {\"decade\": 1530, \"total_works\": 133}, {\"decade\": 1520, \"total_works\": 77}, {\"decade\": 1510, \"total_works\": 69}, {\"decade\": 1500, \"total_works\": 178}, {\"decade\": 1490, \"total_works\": 52}, {\"decade\": 1480, \"total_works\": 48}, {\"decade\": 1470, \"total_works\": 21}, {\"decade\": 1460, \"total_works\": 16}, {\"decade\": 1450, \"total_works\": 21}, {\"decade\": 1440, \"total_works\": 14}, {\"decade\": 1430, \"total_works\": 15}, {\"decade\": 1420, \"total_works\": 12}, {\"decade\": 1410, \"total_works\": 15}, {\"decade\": 1400, \"total_works\": 166}, {\"decade\": 1390, \"total_works\": 12}, {\"decade\": 1380, \"total_works\": 12}, {\"decade\": 1370, \"total_works\": 14}, {\"decade\": 1360, \"total_works\": 13}, {\"decade\": 1350, \"total_works\": 13}, {\"decade\": 1340, \"total_works\": 13}, {\"decade\": 1330, \"total_works\": 14}, {\"decade\": 1320, \"total_works\": 10}, {\"decade\": 1310, \"total_works\": 10}, {\"decade\": 1300, \"total_works\": 112}, {\"decade\": 1290, \"total_works\": 6}, {\"decade\": 1280, \"total_works\": 7}, {\"decade\": 1270, \"total_works\": 5}, {\"decade\": 1260, \"total_works\": 5}, {\"decade\": 1250, \"total_works\": 2}, {\"decade\": 1240, \"total_works\": 4}, {\"decade\": 1230, \"total_works\": 3}, {\"decade\": 1220, \"total_works\": 5}, {\"decade\": 1210, \"total_works\": 3}, {\"decade\": 1200, \"total_works\": 101}, {\"decade\": 1190, \"total_works\": 51}, {\"decade\": 1180, \"total_works\": 2}, {\"decade\": 1170, \"total_works\": 1}, {\"decade\": 1160, \"total_works\": 1}, {\"decade\": 1150, \"total_works\": 1}, {\"decade\": 1140, \"total_works\": 1}, {\"decade\": 1130, \"total_works\": 1}, {\"decade\": 1120, \"total_works\": 1}, {\"decade\": 1110, \"total_works\": 1}, {\"decade\": 1100, \"total_works\": 27}, {\"decade\": 1090, \"total_works\": 5}, {\"decade\": 1080, \"total_works\": 3}, {\"decade\": 1070, \"total_works\": 2}, {\"decade\": 1060, \"total_works\": 1}, {\"decade\": 1050, \"total_works\": 2}, {\"decade\": 1040, \"total_works\": 2}, {\"decade\": 1030, \"total_works\": 1}, {\"decade\": 1020, \"total_works\": 6}, {\"decade\": 1010, \"total_works\": 8}, {\"decade\": 1000, \"total_works\": 20}, {\"decade\": 910, \"total_works\": 2}, {\"decade\": 690, \"total_works\": 2}, {\"decade\": 630, \"total_works\": 1}, {\"decade\": 620, \"total_works\": 1}, {\"decade\": 610, \"total_works\": 1}, {\"decade\": 600, \"total_works\": 1}, {\"decade\": 590, \"total_works\": 1}, {\"decade\": 580, \"total_works\": 1}, {\"decade\": 570, \"total_works\": 1}, {\"decade\": 560, \"total_works\": 1}, {\"decade\": 550, \"total_works\": 1}, {\"decade\": 540, \"total_works\": 1}, {\"decade\": 530, \"total_works\": 1}, {\"decade\": 520, \"total_works\": 1}, {\"decade\": 510, \"total_works\": 1}, {\"decade\": 500, \"total_works\": 1}, {\"decade\": 490, \"total_works\": 2}, {\"decade\": 480, \"total_works\": 1}, {\"decade\": 470, \"total_works\": 1}, {\"decade\": 460, \"total_works\": 1}, {\"decade\": 450, \"total_works\": 1}, {\"decade\": 440, \"total_works\": 1}, {\"decade\": 430, \"total_works\": 1}, {\"decade\": 420, \"total_works\": 1}, {\"decade\": 410, \"total_works\": 1}, {\"decade\": 400, \"total_works\": 1}, {\"decade\": 390, \"total_works\": 1}, {\"decade\": 380, \"total_works\": 1}, {\"decade\": 370, \"total_works\": 1}, {\"decade\": 360, \"total_works\": 1}, {\"decade\": 350, \"total_works\": 1}, {\"decade\": 340, \"total_works\": 1}, {\"decade\": 330, \"total_works\": 1}, {\"decade\": 320, \"total_works\": 1}, {\"decade\": 310, \"total_works\": 1}, {\"decade\": 300, \"total_works\": 1}, {\"decade\": 290, \"total_works\": 1}, {\"decade\": 280, \"total_works\": 1}, {\"decade\": 270, \"total_works\": 1}, {\"decade\": 260, \"total_works\": 3}, {\"decade\": 250, \"total_works\": 1}, {\"decade\": 240, \"total_works\": 1}, {\"decade\": 230, \"total_works\": 1}, {\"decade\": 220, \"total_works\": 2}, {\"decade\": 210, \"total_works\": 2}, {\"decade\": 200, \"total_works\": 12}, {\"decade\": 190, \"total_works\": 18}, {\"decade\": 180, \"total_works\": 2}, {\"decade\": 170, \"total_works\": 1}, {\"decade\": 160, \"total_works\": 2}, {\"decade\": 150, \"total_works\": 1}, {\"decade\": 140, \"total_works\": 1}, {\"decade\": 130, \"total_works\": 1}, {\"decade\": 120, \"total_works\": 1}, {\"decade\": 110, \"total_works\": 3}, {\"decade\": 100, \"total_works\": 1}, {\"decade\": 90, \"total_works\": 2}, {\"decade\": 70, \"total_works\": 3}, {\"decade\": 60, \"total_works\": 1}, {\"decade\": 50, \"total_works\": 1}, {\"decade\": 40, \"total_works\": 1}, {\"decade\": 30, \"total_works\": 8}, {\"decade\": 20, \"total_works\": 30}, {\"decade\": 10, \"total_works\": 63}, {\"decade\": 0, \"total_works\": 292}]}}, {\"mode\": \"vega-lite\"});\n</script></div><figcaption>\n<p><span class=\"caption-number\">Fig. 9.1 </span><span class=\"caption-text\">Distribution of publication dates of works in the \u2018Research &amp; reports\u2019 category</span><a class=\"headerlink\" href=\"#research-decades-chart\" title=\"Link to this image\">#</a></p>\n</figcaption>\n</figure>", "a[href=\"#works-versions-and-dates\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id5\" role=\"doc-backlink\"><span class=\"section-number\">9.3. </span>Works, versions, and dates</a><a class=\"headerlink\" href=\"#works-versions-and-dates\" title=\"Link to this heading\">#</a></h2><p>Date searches can produce odd results when you\u2019re working with aggregated content (as in the <em>Books &amp; Libraries</em> category). What do you think happens if you set the <code class=\"docutils literal notranslate\"><span class=\"pre\">l-decade</span></code> facet to <code class=\"docutils literal notranslate\"><span class=\"pre\">200</span></code> (ie 2000 to 2009) and the <code class=\"docutils literal notranslate\"><span class=\"pre\">l-year</span></code> facet to <code class=\"docutils literal notranslate\"><span class=\"pre\">1900</span></code>? In the <em>Newspapers &amp; Gazettes</em> category you get no results, as you would expect. But in <em>Books &amp; Libraries</em> you get more than a million results!</p><p><a class=\"reference external\" href=\"https://troveconsole.herokuapp.com/v3/?url=https%3A%2F%2Fapi.trove.nla.gov.au%2Fv3%2Fresult%3Fcategory%3Dbook%26l-decade%3D200%26l-year%3D1900%26encoding%3Djson&amp;amp;comment=\"><img alt=\"Try it!\" src=\"https://troveconsole.herokuapp.com/static/img/try-trove-api-console.svg\"/></a></p>", "a[href=\"#using-date-facets\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id3\" role=\"doc-backlink\"><span class=\"section-number\">9.2. </span>Using date facets</a><a class=\"headerlink\" href=\"#using-date-facets\" title=\"Link to this heading\">#</a></h2><p>There are three facets you can use to limit search results by date: <code class=\"docutils literal notranslate\"><span class=\"pre\">decade</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">year</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">month</span></code>. The <code class=\"docutils literal notranslate\"><span class=\"pre\">month</span></code> facet is only available in the <em>Newspapers &amp; Gazettes</em> category.</p>", "a[href=\"../what-is-trove/works-and-versions.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">3. </span>Works and versions<a class=\"headerlink\" href=\"#works-and-versions\" title=\"Link to this heading\">#</a></h1><h2><a class=\"toc-backref\" href=\"#id5\" role=\"doc-backlink\"><span class=\"section-number\">3.1. </span>Grouping versions into works</a><a class=\"headerlink\" href=\"#grouping-versions-into-works\" title=\"Link to this heading\">#</a></h2><p>The idea is simple enough \u2013 bring all the versions of a publication together under a single heading to simplify a user\u2019s search results. Instead of having to wade through a long list of near-identical entries, a user can quickly focus in on a title of interest, and drill down to find a specific version at a specific library. This idea is based on the <a class=\"reference external\" href=\"https://www.ifla.org/references/best-practice-for-national-bibliographic-agencies-in-a-digital-age/resource-description-and-standards/bibliographic-control/functional-requirements-the-frbr-family-of-models/functional-requirements-for-bibliographic-records-frbr/\">Functional Requirements for Bibliographic Records</a> (FRBR). The FRBR data model describes four entities: \u2018work\u2019, \u2018expression\u2019, \u2018manifestation\u2019, and \u2018item\u2019:</p>", "a[href=\"#table-available-search-indexes\"]": "<table class=\"table\" id=\"table-available-search-indexes\">\n<caption><span class=\"caption-number\">Table 9.1 </span><span class=\"caption-text\">Date facets</span><a class=\"headerlink\" href=\"#table-available-search-indexes\" title=\"Link to this table\">#</a></caption>\n<thead>\n<tr class=\"row-odd\"><th class=\"head\"><p>Facet</p></th>\n<th class=\"head\"><p>Description</p></th>\n<th class=\"head\"><p>Example</p></th>\n<th class=\"head\"><p>Categories</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"row-even\"><td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">l-decade</span></code></p></td>\n<td><p>Limit results to a specific decade</p></td>\n<td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">l-decade=190</span></code></p></td>\n<td><p>Applicable to all categories except Websites and Lists</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">l-year</span></code></p></td>\n<td><p>Limit results to a specific year</p></td>\n<td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">l-decade=1901</span></code></p></td>\n<td><p>Applicable to all categories except Websites and Lists</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">l-month</span></code></p></td>\n<td><p>Limit results to a specific month</p></td>\n<td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">l-month=11</span></code></p></td>\n<td><p>Applicable only to Newspapers &amp; Gazettes category</p></td>\n</tr>\n</tbody>\n</table>", "a[href=\"#magazine-decades-chart\"]": "<figure class=\"align-default\" id=\"magazine-decades-chart\" style=\"width: 600px\">\n<div class=\"output text_html\">\n<style>\n  #altair-viz-2cb3e0da590346db841814b9fd85bf9c.vega-embed {\n    width: 100%;\n    display: flex;\n  }\n\n  #altair-viz-2cb3e0da590346db841814b9fd85bf9c.vega-embed details,\n  #altair-viz-2cb3e0da590346db841814b9fd85bf9c.vega-embed details summary {\n    position: relative;\n  }\n</style>\n<div id=\"altair-viz-2cb3e0da590346db841814b9fd85bf9c\"></div>\n<script type=\"text/javascript\">\n  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n  (function(spec, embedOpt){\n    let outputDiv = document.currentScript.previousElementSibling;\n    if (outputDiv.id !== \"altair-viz-2cb3e0da590346db841814b9fd85bf9c\") {\n      outputDiv = document.getElementById(\"altair-viz-2cb3e0da590346db841814b9fd85bf9c\");\n    }\n    const paths = {\n      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.17.0?noext\",\n      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n    };\n\n    function maybeLoadScript(lib, version) {\n      var key = `${lib.replace(\"-\", \"\")}_version`;\n      return (VEGA_DEBUG[key] == version) ?\n        Promise.resolve(paths[lib]) :\n        new Promise(function(resolve, reject) {\n          var s = document.createElement('script');\n          document.getElementsByTagName(\"head\")[0].appendChild(s);\n          s.async = true;\n          s.onload = () => {\n            VEGA_DEBUG[key] = version;\n            return resolve(paths[lib]);\n          };\n          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n          s.src = paths[lib];\n        });\n    }\n\n    function showError(err) {\n      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n      throw err;\n    }\n\n    function displayChart(vegaEmbed) {\n      vegaEmbed(outputDiv, spec, embedOpt)\n        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n    }\n\n    if(typeof define === \"function\" && define.amd) {\n      requirejs.config({paths});\n      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n    } else {\n      maybeLoadScript(\"vega\", \"5\")\n        .then(() => maybeLoadScript(\"vega-lite\", \"5.17.0\"))\n        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n        .catch(showError)\n        .then(() => displayChart(vegaEmbed));\n    }\n  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-42d13d4caceca4740c4e522e504142f2\"}, \"mark\": {\"type\": \"bar\"}, \"encoding\": {\"x\": {\"axis\": {\"format\": \"c\"}, \"bin\": {\"step\": 100}, \"field\": \"decade\", \"title\": \"decade (binned by century)\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"total_works\", \"scale\": {\"type\": \"log\"}, \"title\": \"number of works (log scale)\", \"type\": \"quantitative\"}}, \"height\": 250, \"width\": 500, \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.17.0.json\", \"datasets\": {\"data-42d13d4caceca4740c4e522e504142f2\": [{\"decade\": 2030, \"total_works\": 2}, {\"decade\": 2020, \"total_works\": 324}, {\"decade\": 2010, \"total_works\": 30534}, {\"decade\": 2000, \"total_works\": 72075}, {\"decade\": 1990, \"total_works\": 105030}, {\"decade\": 1980, \"total_works\": 128989}, {\"decade\": 1970, \"total_works\": 132332}, {\"decade\": 1960, \"total_works\": 125314}, {\"decade\": 1950, \"total_works\": 187192}, {\"decade\": 1940, \"total_works\": 219663}, {\"decade\": 1930, \"total_works\": 249522}, {\"decade\": 1920, \"total_works\": 209063}, {\"decade\": 1910, \"total_works\": 132882}, {\"decade\": 1900, \"total_works\": 74168}, {\"decade\": 1890, \"total_works\": 53224}, {\"decade\": 1880, \"total_works\": 48552}, {\"decade\": 1870, \"total_works\": 16759}, {\"decade\": 1860, \"total_works\": 9349}, {\"decade\": 1850, \"total_works\": 5351}, {\"decade\": 1840, \"total_works\": 10365}, {\"decade\": 1830, \"total_works\": 3620}, {\"decade\": 1820, \"total_works\": 2061}, {\"decade\": 1810, \"total_works\": 485}, {\"decade\": 1800, \"total_works\": 61}, {\"decade\": 1780, \"total_works\": 8}, {\"decade\": 1760, \"total_works\": 25}, {\"decade\": 850, \"total_works\": 68}, {\"decade\": 200, \"total_works\": 2}, {\"decade\": 190, \"total_works\": 20}, {\"decade\": 10, \"total_works\": 7}]}}, {\"mode\": \"vega-lite\"});\n</script></div><figcaption>\n<p><span class=\"caption-number\">Fig. 9.2 </span><span class=\"caption-text\">Distribution of publication dates of works in the \u2018Magazines &amp; newsletters\u2019 category</span><a class=\"headerlink\" href=\"#magazine-decades-chart\" title=\"Link to this image\">#</a></p>\n</figcaption>\n</figure>", "a[href=\"#using-the-date-index\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id4\" role=\"doc-backlink\">Using the date index</a><a class=\"headerlink\" href=\"#using-the-date-index\" title=\"Link to this heading\">#</a></h3><p>If you want to search for a range of dates you can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">date</span></code> index. Queries using the <code class=\"docutils literal notranslate\"><span class=\"pre\">date</span></code> index look something like this: <code class=\"docutils literal notranslate\"><span class=\"pre\">date:[STARTDATE</span> <span class=\"pre\">TO</span> <span class=\"pre\">ENDDATE]</span></code>. For example, to include records from 1914 to 1918 (inclusive) in your search, you\u2019d use <code class=\"docutils literal notranslate\"><span class=\"pre\">date:[1914</span> <span class=\"pre\">TO</span> <span class=\"pre\">1918]</span></code>. You can add date index queries to the search box in the web interface, or include them in the <code class=\"docutils literal notranslate\"><span class=\"pre\">q</span></code> parameter of an API request.</p><p><a class=\"reference external\" href=\"https://troveconsole.herokuapp.com/v3/?url=https%3A%2F%2Fapi.trove.nla.gov.au%2Fv3%2Fresult%3Fq%3Ddate%3A%5B1914+TO+1918%5D%26category%3Dnewspaper%26encoding%3Djson&amp;amp;comment=\"><img alt=\"Try it!\" src=\"https://troveconsole.herokuapp.com/static/img/try-trove-api-console.svg\"/></a></p>"}
skip_classes = ["headerlink", "sd-stretched-link", "sd-rounded-pill"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`article.bd-article ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
