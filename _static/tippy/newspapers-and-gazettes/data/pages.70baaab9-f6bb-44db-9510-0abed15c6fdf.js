selector_to_html = {"a[href=\"#page-metadata\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Page metadata<a class=\"headerlink\" href=\"#page-metadata\" title=\"Link to this heading\">#</a></h2><p>Unlike titles and articles, there\u2019s no direct method for requesting metadata about a newspaper page from the Trove API. You can\u2019t, for example, submit a page identifier to the API and get back its publication date, the newspaper it came from, or a list of articles published on it. Pages are linked to articles and issues, but you can only access those links from the other end \u2013 from article and issue records.</p><p>As <a class=\"reference internal\" href=\"#newspaper-page-links\"><span class=\"std std-ref\">described above</span></a>, you can get page identifiers from an article record simply by setting the <code class=\"docutils literal notranslate\"><span class=\"pre\">reclevel</span></code> parameter to <code class=\"docutils literal notranslate\"><span class=\"pre\">full</span></code>. But how can you go in the other direction, and get the identifier for a specific page?</p>", "a[href=\"../../understanding-search/date-searches.html#using-the-date-index\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id4\" role=\"doc-backlink\">Using the date index</a><a class=\"headerlink\" href=\"#using-the-date-index\" title=\"Link to this heading\">#</a></h3><p>If you want to search for a range of dates you can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">date</span></code> index. Queries using the <code class=\"docutils literal notranslate\"><span class=\"pre\">date</span></code> index look something like this: <code class=\"docutils literal notranslate\"><span class=\"pre\">date:[STARTDATE</span> <span class=\"pre\">TO</span> <span class=\"pre\">ENDDATE]</span></code>. For example, to include records from 1914 to 1918 (inclusive) in your search, you\u2019d use <code class=\"docutils literal notranslate\"><span class=\"pre\">date:[1914</span> <span class=\"pre\">TO</span> <span class=\"pre\">1918]</span></code>. You can add date index queries to the search box in the web interface, or include them in the <code class=\"docutils literal notranslate\"><span class=\"pre\">q</span></code> parameter of an API request.</p><p><a class=\"reference external\" href=\"https://troveconsole.herokuapp.com/v3/?url=https%3A%2F%2Fapi.trove.nla.gov.au%2Fv3%2Fresult%3Fq%3Ddate%3A%5B1914+TO+1918%5D%26category%3Dnewspaper%26encoding%3Djson&amp;amp;comment=\"><img alt=\"Try it!\" src=\"https://troveconsole.herokuapp.com/static/img/try-trove-api-console.svg\"/></a></p>", "a[href=\"#get-a-list-of-front-page-identifiers\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Get a list of front page identifiers<a class=\"headerlink\" href=\"#get-a-list-of-front-page-identifiers\" title=\"Link to this heading\">#</a></h3><p>As <a class=\"reference internal\" href=\"issues.html\"><span class=\"doc std std-doc\">described in the section on newspaper issues</span></a>, you can get information about individual issues from the <code class=\"docutils literal notranslate\"><span class=\"pre\">newspaper/title</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">gazette/title</span></code> endpoints. The issue data includes a <code class=\"docutils literal notranslate\"><span class=\"pre\">date</span></code> and a <code class=\"docutils literal notranslate\"><span class=\"pre\">url</span></code>. But if you request the issue url you\u2019re redirected to the first <em>page</em> of that issue! This means that you can start with a newspaper, request a list of issues, and then capture the identifiers of all the front pages. Here\u2019s a full example:</p>", "a[href=\"#download-a-page-as-a-pdf\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Download a page as a PDF<a class=\"headerlink\" href=\"#download-a-page-as-a-pdf\" title=\"Link to this heading\">#</a></h3><p>If you set the <code class=\"docutils literal notranslate\"><span class=\"pre\">reclevel</span></code> parameter to <code class=\"docutils literal notranslate\"><span class=\"pre\">full</span></code> when requesting articles from the <code class=\"docutils literal notranslate\"><span class=\"pre\">/result</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">/newspaper</span></code> API endpoints, the metadata includes a <code class=\"docutils literal notranslate\"><span class=\"pre\">pdf</span></code> field with a list of urls. These urls can be used to download PDF versions of the page(s) on which the article was published. For example:</p>", "a[href=\"#what-are-pages\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">What are pages?<a class=\"headerlink\" href=\"#what-are-pages\" title=\"Link to this heading\">#</a></h2><p>Printed newspaper pages are easy to understand. You can read them, you can turn them, you can wrap your fish and chips in them. Digitised newspaper pages in Trove are a bit more complex and exist in several related forms.</p>", "a[href=\"#newspaper-page-links\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Page links and identifiers<a class=\"headerlink\" href=\"#page-links-and-identifiers\" title=\"Link to this heading\">#</a></h2><p>Each newspaper and gazette page has a unique identifier. This identifier pops up in links to pages and PDFs and can be used to download a page image. But where do you find it?</p><p>In the web interface look under the \u2018Cite\u2019 tab of an article and you\u2019ll see a page identifier of the form <code class=\"docutils literal notranslate\"><span class=\"pre\">http://nla.gov.au/nla.news-page16635065</span></code>.</p>", "a[href=\"#id3\"]": "<figure class=\"align-default\" id=\"id3\">\n<img alt=\"../../_images/31087defd1278c971ffbf5b9d915aa9a5a54b7b9f32724db1994984940d70394.png\" src=\"../../_images/31087defd1278c971ffbf5b9d915aa9a5a54b7b9f32724db1994984940d70394.png\"/>\n<figcaption>\n<p><span class=\"caption-number\">Fig. 17.6 </span><span class=\"caption-text\">Word cloud from the text content of page 3 of the <em>Canberra Times</em>, 2 November 1942.</span><a class=\"headerlink\" href=\"#id3\" title=\"Link to this image\">#</a></p>\n</figcaption>\n</figure>", "a[href=\"#scraping-article-metadata-from-a-page\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Scraping article metadata from a page<a class=\"headerlink\" href=\"#scraping-article-metadata-from-a-page\" title=\"Link to this heading\">#</a></h3><p>While there\u2019s no direct method for requesting information about a page from the API, there is some useful metadata embedded in the HTML of the Trove web site. If you have a page identifier, you can load the web page and extract a list of articles, including their identifiers, categories, titles, and word count. You can even find the positional coordinates of each article on the page.</p><p><mark>==Link to HOW TO or GW notebook==</mark></p>", "a[href=\"issues.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">17.3. </span>Accessing data about newspaper &amp; gazette issues<a class=\"headerlink\" href=\"#accessing-data-about-newspaper-gazette-issues\" title=\"Link to this heading\">#</a></h1><h2><a class=\"toc-backref\" href=\"#id4\" role=\"doc-backlink\">What are issues?</a><a class=\"headerlink\" href=\"#what-are-issues\" title=\"Link to this heading\">#</a></h2><p>An issue is a single edition of a newspaper published on a particular date. Some newspapers published multiple editions each day, however, Trove holds only one edition per day for each newspaper. This means that issues in Trove can be identified and analysed by date.</p>", "a[href=\"#missing-page\"]": "<figure class=\"align-default\" id=\"missing-page\">\n<a class=\"reference internal image-reference\" href=\"../../_images/missing-page.png\"><img alt=\"../../_images/missing-page.png\" src=\"../../_images/missing-page.png\" style=\"width: 300px;\"/></a>\n<figcaption>\n<p><span class=\"caption-number\">Fig. 17.4 </span><span class=\"caption-text\">Example of a missing page placeholder, from <a class=\"reference external\" href=\"http://nla.gov.au/nla.news-page20232534\">The Sydney Mail and New South Wales Advertiser, 6 January 1894, page 1</a></span><a class=\"headerlink\" href=\"#missing-page\" title=\"Link to this image\">#</a></p>\n</figcaption>\n</figure>", "a[href=\"#download-a-page-image\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Download a page image<a class=\"headerlink\" href=\"#download-a-page-image\" title=\"Link to this heading\">#</a></h3><p>Once you know the secret formula, getting page images is easy. You can download a page image using a url like this:</p>", "a[href=\"#pages-are-images\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Pages are images<a class=\"headerlink\" href=\"#pages-are-images\" title=\"Link to this heading\">#</a></h3><p>The digitisation process creates an image of each newspaper page. These images can be downloaded in different resolutions by <a class=\"reference internal\" href=\"#download-a-page-image\"><span class=\"std std-ref\">using the page\u2019s unique identifier to construct a direct url</span></a>. Articles are extracted from page images by the OCR process.</p>", "a[href=\"#accessing-data-about-newspaper-gazette-pages\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><span class=\"section-number\">17.2. </span>Accessing data about newspaper &amp; gazette pages<a class=\"headerlink\" href=\"#accessing-data-about-newspaper-gazette-pages\" title=\"Link to this heading\">#</a></h1><p><img alt=\"Screenshot of the masthead at the top of a newspaper page\" src=\"../../_images/16635065-level4-cropped.jpg\"/></p>", "a[href=\"#download-a-collection-of-page-images-or-pdfs\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Download a collection of page images or PDFs<a class=\"headerlink\" href=\"#download-a-collection-of-page-images-or-pdfs\" title=\"Link to this heading\">#</a></h3><p>Perhaps you want to download all the front pages of a particular newspaper, the front page of all newspapers on a particular date, or the pages on which a collection of articles was published. Use one of the methods described above to get a list of page urls. Then loop through the list, extracting the page id, and constructing the image download url for each page. For example:</p>", "a[href=\"#page-images-and-pdfs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Page images and PDFs<a class=\"headerlink\" href=\"#page-images-and-pdfs\" title=\"Link to this heading\">#</a></h2><h3>Download a page image<a class=\"headerlink\" href=\"#download-a-page-image\" title=\"Link to this heading\">#</a></h3><p>Once you know the secret formula, getting page images is easy. You can download a page image using a url like this:</p>", "a[href=\"#page-links-and-identifiers\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Page links and identifiers<a class=\"headerlink\" href=\"#page-links-and-identifiers\" title=\"Link to this heading\">#</a></h2><p>Each newspaper and gazette page has a unique identifier. This identifier pops up in links to pages and PDFs and can be used to download a page image. But where do you find it?</p><p>In the web interface look under the \u2018Cite\u2019 tab of an article and you\u2019ll see a page identifier of the form <code class=\"docutils literal notranslate\"><span class=\"pre\">http://nla.gov.au/nla.news-page16635065</span></code>.</p>", "a[href=\"#pages-are-metadata\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Pages are metadata<a class=\"headerlink\" href=\"#pages-are-metadata\" title=\"Link to this heading\">#</a></h3><p>In printed newspapers, pages are the main means of navigation. But in Trove, users search for articles, and have to browse up along the breadcrumbs trail to find the current page. Every digitised article has a metadata field that records the number of the page on which the article was published. That number is displayed in the web interface and included in article records delivered through the Trove API. The <code class=\"docutils literal notranslate\"><span class=\"pre\">page</span></code> metadata generally corresponds to the numbers printed on the original pages. You can search for articles on a specific page using the <code class=\"docutils literal notranslate\"><span class=\"pre\">firstpageseq</span></code> index.</p>", "a[href=\"../../understanding-search/notes.html#search-indexes-firstpageseq\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Searching for articles on a specific page<a class=\"headerlink\" href=\"#searching-for-articles-on-a-specific-page\" title=\"Link to this heading\">#</a></h1><p>You can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">firstpageseq</span></code> index to search for articles published on a particular page. For example, include <code class=\"docutils literal notranslate\"><span class=\"pre\">firstpageseq:1</span></code> in your query to find articles on page one. This works in both the web interface\u2019s simple search box and the <code class=\"docutils literal notranslate\"><span class=\"pre\">q</span></code> value of the API.</p><p><a class=\"reference external\" href=\"https://troveconsole.herokuapp.com/v3/?url=https%3A//api.trove.nla.gov.au/v3/result%3Fq%3Dfirstpageseq%3A1%26category%3Dnewspaper%26encoding%3Djson&amp;amp;comment=\"><img alt=\"Try it!\" src=\"https://troveconsole.herokuapp.com/static/img/try-trove-api-console.svg\"/></a></p>", "a[href=\"#front-page-example\"]": "<figure class=\"align-default\" id=\"front-page-example\" style=\"width: 400px\">\n<img alt=\"../../_images/1f8c0db8191706da6aec6e1b328719f38268fc7b443e90bf63ea6e963499feff.jpg\" src=\"../../_images/1f8c0db8191706da6aec6e1b328719f38268fc7b443e90bf63ea6e963499feff.jpg\"/>\n<figcaption>\n<p><span class=\"caption-number\">Fig. 17.7 </span><span class=\"caption-text\">Front page downloaded by the code above: <a class=\"reference internal\" href=\"#%7Bglue:text%7D%60issue_url%60\"><span class=\"xref myst\"><span class=\"pasted-text\">https://trove.nla.gov.au/newspaper/page/517967</span></span></a></span><a class=\"headerlink\" href=\"#front-page-example\" title=\"Link to this image\">#</a></p>\n</figcaption>\n</figure>", "a[href=\"#get-a-list-of-front-page-urls\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Get a list of front page identifiers<a class=\"headerlink\" href=\"#get-a-list-of-front-page-identifiers\" title=\"Link to this heading\">#</a></h3><p>As <a class=\"reference internal\" href=\"issues.html\"><span class=\"doc std std-doc\">described in the section on newspaper issues</span></a>, you can get information about individual issues from the <code class=\"docutils literal notranslate\"><span class=\"pre\">newspaper/title</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">gazette/title</span></code> endpoints. The issue data includes a <code class=\"docutils literal notranslate\"><span class=\"pre\">date</span></code> and a <code class=\"docutils literal notranslate\"><span class=\"pre\">url</span></code>. But if you request the issue url you\u2019re redirected to the first <em>page</em> of that issue! This means that you can start with a newspaper, request a list of issues, and then capture the identifiers of all the front pages. Here\u2019s a full example:</p>", "a[href=\"#page-text\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Page text<a class=\"headerlink\" href=\"#page-text\" title=\"Link to this heading\">#</a></h2><p>To get the full text content of a page, you need to aggregate the content of all the articles published on that page. The method is much the same as that <a class=\"reference internal\" href=\"#get-page-identifier-from-search\"><span class=\"std std-ref\">described above</span></a> \u2013 you search for articles on a specific page by specifying the newspaper, date and page. You also need to set <code class=\"docutils literal notranslate\"><span class=\"pre\">include</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">articleText</span></code> to add the full text to the article records. You can then collect the text content of each article. Here\u2019s an example that collects the article texts from a page and uses them to create a wordcloud using the <a class=\"reference external\" href=\"https://github.com/amueller/word_cloud\">WordCloud package</a>.</p>", "a[href=\"#pages-are-sometimes-missing\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Pages are sometimes missing<a class=\"headerlink\" href=\"#pages-are-sometimes-missing\" title=\"Link to this heading\">#</a></h3><p>Pages that were missing when a newspaper was digitised are usually marked by placeholder images. These missing pages, like other pages, have unique identifiers. You can construct links to them, and even download the placeholder, but they\u2019re <em>not really there</em>. Because the pages haven\u2019t gone through the OCR process, no articles from them will show up in search results. This raises the question, how many newspaper and gazette pages are missing from Trove?</p>", "a[href=\"#pages-are-entry-points\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Pages are entry points<a class=\"headerlink\" href=\"#pages-are-entry-points\" title=\"Link to this heading\">#</a></h3><p>You can save and share links to pages. These links open the page in the Trove web interface and display a list of included articles. You can also find page links in the <code class=\"docutils literal notranslate\"><span class=\"pre\">trovePageUrl</span></code> field of an article\u2019s metadata. However, while you can view pages in the Trove web interface, you can\u2019t access information about individual pages using the API \u2013 they just don\u2019t exist as separate entities.</p>", "a[href=\"#get-page-identifier-from-search\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Get the identifier of a specific page by searching for articles<a class=\"headerlink\" href=\"#get-the-identifier-of-a-specific-page-by-searching-for-articles\" title=\"Link to this heading\">#</a></h3><p>To get the identifier of a specific page, you need to construct a very precise search for articles published on that page using the <code class=\"docutils literal notranslate\"><span class=\"pre\">/result</span></code> endpoint. You can do this by specifying the title (the newspaper name), the publication date, and the page number. Once you have the search results, you can extract the page identifier from the article records.</p><p>The newspaper title is set using the <code class=\"docutils literal notranslate\"><span class=\"pre\">l-title</span></code> parameter. For example, the identifier for the <em>Canberra Times</em> is <code class=\"docutils literal notranslate\"><span class=\"pre\">11</span></code>, so to limit your search to the <em>Canberra Times</em> you\u2019d set <code class=\"docutils literal notranslate\"><span class=\"pre\">l-title</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">11</span></code>.</p>", "a[href=\"#get-the-identifier-of-a-specific-page-by-searching-for-articles\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Get the identifier of a specific page by searching for articles<a class=\"headerlink\" href=\"#get-the-identifier-of-a-specific-page-by-searching-for-articles\" title=\"Link to this heading\">#</a></h3><p>To get the identifier of a specific page, you need to construct a very precise search for articles published on that page using the <code class=\"docutils literal notranslate\"><span class=\"pre\">/result</span></code> endpoint. You can do this by specifying the title (the newspaper name), the publication date, and the page number. Once you have the search results, you can extract the page identifier from the article records.</p><p>The newspaper title is set using the <code class=\"docutils literal notranslate\"><span class=\"pre\">l-title</span></code> parameter. For example, the identifier for the <em>Canberra Times</em> is <code class=\"docutils literal notranslate\"><span class=\"pre\">11</span></code>, so to limit your search to the <em>Canberra Times</em> you\u2019d set <code class=\"docutils literal notranslate\"><span class=\"pre\">l-title</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">11</span></code>.</p>", "a[href=\"#page-cite\"]": "<figure class=\"align-default\" id=\"page-cite\">\n<a class=\"reference internal image-reference\" href=\"../../_images/article-cite.png\"><img alt=\"../../_images/article-cite.png\" src=\"../../_images/article-cite.png\" style=\"width: 300px;\"/></a>\n<figcaption>\n<p><span class=\"caption-number\">Fig. 17.5 </span><span class=\"caption-text\">Example of a page identifier found in an article\u2019s \u2018Cite\u2019 tab.</span><a class=\"headerlink\" href=\"#page-cite\" title=\"Link to this image\">#</a></p>\n</figcaption>\n</figure>"}
skip_classes = ["headerlink", "sd-stretched-link", "sd-rounded-pill"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`article.bd-article ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
